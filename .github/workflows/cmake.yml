name: Build

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Install dependencies
      run: |
        sudo apt-get install gcovr ninja-build valgrind
    - name: Setup
      run: |
        mkdir build
    - name: Configure
      working-directory: build
      run: |
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=YES -GNinja ..
    - name: Build
      working-directory: build
      run: |
        cmake --build .
    - name: Run CTest
      working-directory: build/test
      run: |
        ctest --verbose

    - name: Run Valgrind Memcheck
      working-directory: build/test
      run: |
        valgrind --tool=memcheck ./test.simfil
    - name: Run Valgrind Helgrind
      working-directory: build/test
      run: |
        valgrind --tool=helgrind ./test.simfil
    - name: Run Valgrind Cachegrind
      working-directory: build/test
      run: |
        valgrind --tool=cachegrind ./test.simfil | tee cachegrind-out.txt

  build-windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup
      run: |
        mkdir build
    - name: Configure
      working-directory: build
      run: |
        cmake ..
      shell: cmd
    - name: Build
      working-directory: build
      run: |
        cmake --build .
      shell: cmd
    - name: Run CTest
      working-directory: build/test
      run: |
        ctest -C Debug --verbose
      shell: cmd

  build-macos:
    name: MacOS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup
      run: |
        mkdir build
    - name: Configure
      working-directory: build
      run: |
        cmake ..
    - name: Build
      working-directory: build
      run: |
        cmake --build .
    - name: Run CTest
      working-directory: build/test
      run: |
        ctest --verbose
